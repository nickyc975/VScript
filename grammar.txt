primary_expression:CONSTANT
primary_expression:IDENTIFIER
primary_expression:L_PAREN expression R_PAREN

postfix_expression:primary_expression
postfix_expression:postfix_expression L_BRACK expression R_BRACK
postfix_expression:postfix_expression L_PAREN R_PAREN
postfix_expression:postfix_expression L_PAREN argument_expression_list R_PAREN

unary_expression:postfix_expression
unary_expression:NOT postfix_expression
unary_expression:SUB postfix_expression

multiplicative_expression:unary_expression
multiplicative_expression:multiplicative_expression MUL unary_expression
multiplicative_expression:multiplicative_expression DIV unary_expression
multiplicative_expression:multiplicative_expression MOD unary_expression

additive_expression:multiplicative_expression
additive_expression:additive_expression ADD multiplicative_expression
additive_expression:additive_expression SUB multiplicative_expression

relational_expression:additive_expression
relational_expression:relational_expression LT additive_expression
relational_expression:relational_expression GT additive_expression
relational_expression:relational_expression LE additive_expression
relational_expression:relational_expression GE additive_expression

equality_expression:relational_expression
equality_expression:equality_expression EQ relational_expression
equality_expression:equality_expression NEQ relational_expression

logical_and_expression:equality_expression
logical_and_expression:logical_and_expression AND equality_expression

logical_or_expression:logical_and_expression
logical_or_expression:logical_or_expression OR logical_and_expression

assignment_expression:logical_or_expression
assignment_expression:postfix_expression assignment_operator logical_or_expression

argument_expression_list:logical_or_expression
argument_expression_list:argument_expression_list COMMA logical_or_expression

assignment_operator:ASSIGN
assignment_operator:MUL_ASSIGN
assignment_operator:DIV_ASSIGN
assignment_operator:MOD_ASSIGN
assignment_operator:ADD_ASSIGN
assignment_operator:SUB_ASSIGN
assignment_operator:AND_ASSIGN
assignment_operator:OR_ASSIGN

expression:assignment_expression
expression:expression COMMA assignment_expression

declaration:VAR init_declarator_list SEMICOLON
declaration:VAL init_declarator_list SEMICOLON

function_declaration:FUNC IDENTIFIER L_PAREN R_PAREN compound_statement
function_declaration:FUNC IDENTIFIER L_PAREN identifier_list R_PAREN compound_statement

init_declarator_list:init_declarator
init_declarator_list:init_declarator_list COMMA init_declarator

init_declarator:IDENTIFIER
init_declarator:IDENTIFIER ASSIGN initializer

identifier_list:IDENTIFIER
identifier_list:identifier_list COMMA IDENTIFIER

initializer:logical_or_expression
initializer:L_BRACK R_BRACK
initializer:L_BRACK initializer_list R_BRACK
initializer:L_BRACK initializer_list COMMA R_BRACK

initializer_list:initializer
initializer_list:initializer_list COMMA initializer

logic_or_expression_list:logic_or_expression
logic_or_expression_list:logic_or_expression_list COMMA logic_or_expression

io_statement:INPUT L_PAREN R_PAREN SEMICOLON
io_statement:INPUT L_PAREN logic_or_expression_list R_PAREN SEMICOLON
io_statement:PRINT L_PAREN R_PAREN SEMICOLON
io_statement:PRINT L_PAREN logic_or_expression_list R_PAREN SEMICOLON

statement:io_statement
statement:function_declaration
statement:expression_statement
statement:selection_statement
statement:iteration_statement
statement:jump_statement

statement_block:statement
statement_block:declaration
statement_block:statement_block statement
statement_block:statement_block declaration

compound_statement:L_CURLY R_CURLY
compound_statement:L_CURLY statement_block R_CURLY

expression_statement:SEMICOLON
expression_statement:expression SEMICOLON

elif_statement:ELIF L_PAREN expression R_PAREN compound_statement
elif_statement:elif_statement ELIF L_PAREN expression R_PAREN compound_statement

selection_statement:IF L_PAREN expression R_PAREN compound_statement
selection_statement:IF L_PAREN expression R_PAREN compound_statement elif_statement
selection_statement:IF L_PAREN expression R_PAREN compound_statement ELSE compound_statement
selection_statement:IF L_PAREN expression R_PAREN compound_statement elif_statement ELSE compound_statement

iteration_statement:WHILE L_PAREN expression R_PAREN compound_statement
iteration_statement:FOR L_PAREN declaration expression_statement R_PAREN compound_statement
iteration_statement:FOR L_PAREN declaration expression_statement expression R_PAREN compound_statement
iteration_statement:FOR L_PAREN expression_statement expression_statement R_PAREN compound_statement
iteration_statement:FOR L_PAREN expression_statement expression_statement expression R_PAREN compound_statement

jump_statement:CONTINUE SEMICOLON
jump_statement:BREAK SEMICOLON
jump_statement:RETURN SEMICOLON
jump_statement:RETURN expression SEMICOLON

external_declaration:io_statement
external_declaration:function_declaration
external_declaration:declaration
external_declaration:expression_statement
external_declaration:selection_statement
external_declaration:iteration_statement

translation_unit:external_declaration
translation_unit:translation_unit external_declaration

program:translation_unit